<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnValidateConfig.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcGBwcI
        CQsJCAgKCAcHCg0KCgsMDAwMBwkODw0MDgsMDAz/2wBDAQICAgMDAwYDAwYMCAcIDAwMDAwMDAwMDAwM
        DAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAz/wAARCAAsACoDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD99NW1a10DSrm+vrmCysrKJp7i4nkEcUEagszuxwFUAEkngAV8
        g/GL9vzxR4vgY+A4bXwt4fKzxjV9Ys2k1O9wyqk1tathIIyN7I9wHY4XdbqPvZn/AAUL+OUXjH4uxfD/
        AMxjoHg+K31fWFhvGQX2oOQ9razIFw0cMYW4aNm+Zp7VsfIN3yb8Yfjdst5f3xJOSctk1+PcY8X4r61L
        A4CXJGGkpLdvqk+iWztq32S1/PeIuIa3tZYXDS5VHRtbt9k+lvLW/lvofHP9s/4kWWtpqCfFLxn9ptH3
        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
        2Q==
</value>
  </data>
</root>